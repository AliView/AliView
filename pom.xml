<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>AliView</groupId>
  <artifactId>AliView</artifactId>
  <packaging>jar</packaging>
  <version>0.9.9.3</version>
  <name>AliView</name>
  <url>http://maven.apache.org</url>  
  <properties>
       <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
       <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>
  <repositories>
    <repository>
      <id>My local server</id>
      <name>woodsia-servern-maven-2-repo</name>
      <url>http://botanik.dnsalias.com/mvn-repo</url>
    </repository>
    <repository>
      <id>www.intalio.org</id>
      <name>www.intalio.org-maven-2-repo</name>
      <url>http://www.intalio.org/public/maven2</url>
    </repository>
    <repository>
      <id>biojava-maven-repo</id>
      <name>BioJava repository</name>
      <url>http://www.biojava.org/download/maven/</url>			
    </repository>
  </repositories>
  <build>
	<!-- make sure binaries not are filtered - then they will get corrupted-->
	<!-- there is one set of files to be filtered and copied and another copied but not filtered-->
    
    <resources>
        <resource>
            <directory>src/main/resources</directory>
            <filtering>true</filtering>
            <includes>
                <include>**/*.xml</include>
                <include>**/*.properties</include>
            </includes>
        </resource>  
        <resource>
             <directory>src/main/resources</directory>
             <filtering>false</filtering>
             <excludes>
                <exclude>**/*.xml</exclude>
                <exclude>**/*.properties</exclude>
             </excludes>
         </resource>
    </resources>  
    
    <plugins>  
       <plugin>
         <groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-resources-plugin</artifactId>
		<version>2.6</version> 
          <configuration>
            <escapeString>\</escapeString>
          </configuration>
       </plugin>
       <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.0.2</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
       </configuration>
     </plugin>
     <!--
     <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <finalName>
            aliview
          </finalName>
          <appendAssemblyId>false</appendAssemblyId>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
          <archive>
            <manifest>
              <mainClass>aliview.AliView</mainClass>
            </manifest>
          </archive>       
        </configuration>
       </plugin>
     -->
     <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
                <execution>
                    <id>unpack-dependencies</id>
                    <phase>generate-resources</phase>
                    <goals>
                        <goal>unpack-dependencies</goal>
                    </goals>
                </execution>
            </executions>
        </plugin>
     <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
           <configuration>
                <finalName>aliview</finalName>
                <appendAssemblyId>false</appendAssemblyId>
                <descriptorRefs>
                    <descriptorRef>jar-with-dependencies</descriptorRef>
                </descriptorRefs>
                <archive>
                   <manifest>
                      <mainClass>aliview.AliView</mainClass>
                   </manifest>
                </archive>      
          </configuration>
          <executions>
			  <execution>
				  <id>build-jar-to-use-in-win</id>
				  <phase>package</phase>
				  <goals>
					 <goal>single</goal>
				  </goals>
				  <configuration>
					   <finalName>aliview</finalName>
					   <outputDirectory>target/windows-version-${project.version}</outputDirectory>
					   <appendAssemblyId>false</appendAssemblyId>
					   <descriptorRefs>
						  <descriptorRef>jar-with-dependencies</descriptorRef>
					   </descriptorRefs>
					   <archive>
						  <manifest>
							 <mainClass>aliview.AliView</mainClass>
						  </manifest>
					   </archive>       
				  </configuration>
			   </execution>
			   <execution>	
				  <id>build-jar-to-use-for-linux</id>
				  <phase>package</phase>
				  <goals>
					  <goal>single</goal>
				   </goals>
				   <configuration>
					  <finalName>aliview</finalName>
					  <outputDirectory>target/linux-version-${project.version}/aliview/</outputDirectory>
					  <appendAssemblyId>false</appendAssemblyId>
					  <descriptorRefs>
						 <descriptorRef>jar-with-dependencies</descriptorRef>
					  </descriptorRefs>
					  <archive>
							<manifest>
							  <mainClass>aliview.AliView</mainClass>
							</manifest>
					   </archive>       
                    </configuration>
                 </execution>
                 <execution>
                    <id>build-jar-to-use-for-mac</id>
			         <phase>package</phase>
                     <goals>
                         <goal>single</goal>
                     </goals>
			         <configuration>
						  <finalName>aliview</finalName>
						  <appendAssemblyId>false</appendAssemblyId>
						  <descriptorRefs>
							   <descriptorRef>jar-with-dependencies</descriptorRef>
						  </descriptorRefs>
						  <archive>
							<manifest>
							  <mainClass>aliview.AliView</mainClass>
							</manifest>
						  </archive>       
                      </configuration>
                  </execution>
		 </executions>
    </plugin>
	<plugin>
	   <groupId>org.codehaus.mojo</groupId>
	   <artifactId>truezip-maven-plugin</artifactId>
	   <version>1.1</version>
	   <executions>
		  <execution>
            <id>remove-a-file-in-windows-version</id>
            <goals>
                <goal>remove</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <filesets>
                <fileset>
                    <directory>target/windows-version-${project.version}/aliview.jar</directory>
                    <includes>
                        <include>muscle*linux*</include>
                        <include>muscle*darwin*</include>
                        <include>muscle*mac*</include>
                    </includes>
                </fileset>
              </filesets>
            </configuration>
         </execution>
         <execution>
            <id>remove-a-file-in-sub-archive-mac</id>
            <goals>
                <goal>remove</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <filesets>
                <fileset>
                    <directory>target/aliview.jar</directory>
                    <includes>
                        <include>muscle*linux*</include>
                        <include>muscle*.exe</include>
                    </includes>
                </fileset>
               </filesets>
             </configuration>
          </execution>
          <execution>
            <id>remove-a-file-in-sub-archive-linux</id>
            <goals>
               <goal>remove</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <filesets>
                <fileset>
                    <directory>target/linux-version-${project.version}/aliview/aliview.jar</directory>
                    <includes>
                        <include>muscle*darwin*</include>
                        <include>muscle*mac*</include>
                        <include>muscle*.exe</include>
                    </includes>
                 </fileset>
               </filesets>
             </configuration>           
         </execution>
         
         <execution>
            <id>remove-jar-files-from-osx-bundle-since-they-are-unpacked-in-ailiview-jar-already</id>
            <goals>
               <goal>remove</goal>
            </goals>
            <phase>install</phase>
            <configuration>
              <filesets>
                <fileset>
                    <directory>${project.build.directory}/${project.build.finalName}-app.zip</directory>
                    <includes>
                        <include>**/jebl2</include>
                        <include>**/commons-lang</include>
                        <include>**/commons-io</include>
                        <include>**/log4j</include>
                    </includes>
                 </fileset>
               </filesets>
             </configuration>           
         </execution>
         
       </executions>
    </plugin>
	<plugin>  
	  <groupId>org.jvnet.jaxb2.maven2</groupId>
	  <artifactId>maven-jaxb2-plugin</artifactId>
	  <version>0.8.3</version>
	  <executions>
		<execution>
		  <goals>
			<goal>generate</goal>
		  </goals>
		  <configuration>
			<generatePackage>ncbi.blast.result.generated</generatePackage>
			<generateDirectory>${basedir}/src/main/java</generateDirectory>
			<schemaLanguage>dtd</schemaLanguage>
			<schemaIncludes>
			  <!-- location of root schema file (in this case: src/main/resources/schemaFolder/NCBI_BlastOutput.dtd) -->
			  <value>NCBI_BlastOutput.dtd</value>
			</schemaIncludes>
		   </configuration>
		 </execution>
	   </executions>
	</plugin>
	
	<plugin>
  <groupId>org.codehaus.mojo</groupId>
  <artifactId>exec-maven-plugin</artifactId>
  <version>1.2</version>
  <executions>
    
    <execution>
      <id>copy linux install files</id>
      <goals>
        <goal>exec</goal>
      </goals>
      <configuration>
        <executable>cp</executable>
        <arguments>
          <argument>${basedir}/aliview-linux/*</argument>
          <argument>${basedir}/target/linux-version-${project.version}/aliview/</argument>

        </arguments>
      </configuration>
    </execution>
    
    
    <execution>
      <id>cbuild linux install</id>
      <goals>
        <goal>exec</goal>
      </goals>
      <configuration>
        <executable>makeself</executable>
        <arguments>
          <argument>${basedir}/target/linux-version-${project.version}/aliview</argument>
          <argument>${basedir}/target/linux-version-${project.version}/aliview.install.run</argument>
          <argument>"Installer for AliView"</argument>
          <argument>./install.sh</argument>
        </arguments>
      </configuration>
    </execution>
  </executions>
</plugin>
	
    <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>osxappbundle-maven-plugin</artifactId>
        <version>1.0-alpha-2</version>
        <configuration>
            <mainClass>aliview.AliView</mainClass>
            <dictionaryFile>${basedir}/src/main/resources/Info.plist</dictionaryFile>
            <iconFile>${basedir}/src/main/resources/img/alignment_ico.icns</iconFile>
            <version>${project.version}</version>
            <myClasspath>$JAVAROOT/repo/AliView/AliView/${project.version}/AliView-${project.version}.jar</myClasspath>
            <javaApplicationStub>/home/anders/program/JavaApplicationStub/JavaApplicationStub</javaApplicationStub>
            <!--<zipFile>${project.build.directory}/${project.build.finalName}-app.zip</zipFile>-->
        </configuration>
        <executions>
            <execution>
                <phase>package</phase>
                <goals>
                   <goal>bundle</goal>
                </goals>
            </execution>
        </executions>
     </plugin>
	 <plugin>
		<groupId>org.bluestemsoftware.open.maven.plugin</groupId>
		<artifactId>launch4j-plugin</artifactId>
		<version>1.5.0.0</version>
		<executions>
			<!-- GUI exe -->
			<execution>
				<id>l4j-gui</id>
				<phase>package</phase>
				<goals>
					<goal>launch4j</goal>
				</goals>
				<configuration>
					<headerType>gui</headerType>
					<outfile>target/windows-version-${project.version}/AliView.exe</outfile>
					<jar>target/windows-version-${project.version}/aliview.jar</jar> 
					<!--
					<outfile>target/windows-version-${project.version}/AliView.exe</outfile>
					<jar>target/windows/aliview.jar</jar> 
					-->
					<errTitle>App Err</errTitle>
					<classPath>
						<mainClass>aliview.AliView</mainClass>
					</classPath>
					<icon>icon_images/win/alignment_multi.ico</icon>
					<jre>
						<minVersion>1.5.0</minVersion>
						<!--<maxVersion>1.6.0</maxVersion>-->
						<initialHeapSize>128</initialHeapSize>
						<maxHeapSize>1024</maxHeapSize>
					</jre>
					<splash>
						<file>icon_images/alignment_ico_128x128_transp.bmp</file>
						<waitForWindow>true</waitForWindow>
						<timeout>60</timeout>
						<timeoutErr>true</timeoutErr>
					</splash>
					<versionInfo>
						<fileVersion>1.0.0.0</fileVersion>
						<txtFileVersion>1.0.0.0</txtFileVersion>
						<fileDescription>Desc</fileDescription>
						<copyright>C</copyright>
						<productVersion>1.0.0.0</productVersion>
						<txtProductVersion>1.0.0.0</txtProductVersion>
						<productName>AliView</productName>
						<internalName>AliView</internalName>
						<originalFilename>App.exe</originalFilename>
					</versionInfo>
				</configuration>
			</execution>
		</executions>
	</plugin>
<!--
 <artifactId>jdeb</artifactId>
                <groupId>org.vafer</groupId>
                <version>1.1.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jdeb</goal>
                        </goals>
                        <configuration>
                            <verbose>true</verbose>
                            <snapshotExpand>true</snapshotExpand>

                            <snapshotEnv>USER</snapshotEnv>
                            <verbose>true</verbose>
                            <controlDir>${basedir}/src/deb/control</controlDir>
                            <dataSet>

                                <data>
                                  <src>${project.build.directory}/${project.build.finalName}.jar</src>
                                  <type>file</type>
                                  <mapper>
                                    <type>perm</type>
                                    <prefix>/usr/share/jdeb/lib</prefix>
                                    <user>loader</user>
                                    <group>loader</group>
                                  </mapper>
                                </data>

                                <data>
                                  <type>link</type>
                                  <symlink>true</symlink>
                                  <linkName>/usr/share/java/jdeb.jar</linkName>
                                  <linkTarget>/usr/share/jdeb/lib/${project.build.finalName}.jar</linkTarget>
                                </data>

                                <data>
                                  <src>${basedir}/src/deb/init.d</src>
                                  <type>directory</type>
                                  <mapper>
                                    <type>perm</type>
                                    <prefix>/etc/init.d</prefix>
                                    <user>loader</user>
                                    <group>loader</group>
                                  </mapper>
                                </data>

                                <data>
                                  <type>template</type>
                                  <paths>
                                    <path>etc/${project.artifactId}</path>
                                    <path>var/lib/${project.artifactId}</path>
                                    <path>var/log/${project.artifactId}</path>
                                    <path>var/run/${project.artifactId}</path>
                                  </paths>
                                  <mapper>
                                    <type>perm</type>
                                    <user>loader</user>
                                    <group>loader</group>
                                  </mapper>
                                </data>

                            </dataSet>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
    -->
   </plugins>
  <!-- <copy file="aliview-linux/*" tofile="target/linux-version-${project.version}/aliview/"/> -->
  </build>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.13</version>

    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.6</version>

    </dependency>
    <dependency>
    	<groupId>commons-io</groupId>
    	<artifactId>commons-io</artifactId>
    	<version>2.2</version>

    </dependency>

    <!--
    <dependency>
	<groupId>commons-collections</groupId>
	<artifactId>commons-collections</artifactId>
	<version>3.2.1</version>
    </dependency>
    
    <dependency>
	  <groupId>it.unimi.dsi</groupId>
	  <artifactId>dsiutils</artifactId>
	  <version>2.0.15</version>
    </dependency>
    -->
    
    <dependency>
      <groupId>jebl2</groupId>
      <artifactId>jebl</artifactId>
      <version>0.1</version>

    </dependency>  
    <!--
    <dependency>
      <groupId>scripts</groupId>
      <artifactId>scripts</artifactId>
      <version>0.9-SNAPSHOT</version>
    </dependency>
    
   -->
  </dependencies>
</project>
